import numpy as np 

def monte_carlo_call_option_price(S0, K, T, r, sigma, n_simulations):
    Z = np.random.standard_normal(n_simulations)
    ST = S0 * np.exp((r - 0.5 * sigma**2) * T + sigma * np.sqrt(T) * Z)
    payoffs = np.maximum(ST - K, 0)
    option_price = np.exp(-r * T) * np.mean(payoffs)
    return option_price

if __name__ == "__main__":
    S0 = 100      # initial price
    K = 105       # strike price
    T = 1.0       # maturity (years)
    r = 0.05      # risk-free rate
    sigma = 0.2   # volatility
    n = 100_000   # simulations

    price = monte_carlo_call_option_price(S0, K, T, r, sigma, n)
    print(f"Estimated option price: ${price:.4f}")
